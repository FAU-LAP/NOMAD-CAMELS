# Patch generated by Pyment v0.3.3

--- a/.\nomad_camels\\tests\instrument_management_test.py
+++ b/.\nomad_camels\\tests\instrument_management_test.py
@@ -3,7 +3,17 @@
 
 def test_install_demo_device(qtbot):
     """This test tries to install the demo device, using the
-    instrument_installer widget."""
+    instrument_installer widget.
+
+    Parameters
+    ----------
+    qtbot :
+        
+
+    Returns
+    -------
+
+    """
     from nomad_camels.frontpanels import instrument_installer
     installer = instrument_installer.Instrument_Installer()
     qtbot.addWidget(installer)  # used to run the qt-app and close the widget after the test
@@ -11,7 +21,19 @@
 
 def install_demo(qtbot, installer):
     """A helper function, used by `test_install_demo_device` and also by
-    `test_add_device`, if the device is not yet installed"""
+    `test_add_device`, if the device is not yet installed
+
+    Parameters
+    ----------
+    qtbot :
+        
+    installer :
+        
+
+    Returns
+    -------
+
+    """
     for box in installer.checkboxes:
         if box.text() == 'demo_device':
             box.setChecked(True)
@@ -26,7 +48,17 @@
 def test_add_device(qtbot):
     """Going through the instrument management, if demo_device is not installed,
     it will be. Then the config widget is used to add a demo_device.
-    In the end there is a check whether it is in the list of devices."""
+    In the end there is a check whether it is in the list of devices.
+
+    Parameters
+    ----------
+    qtbot :
+        
+
+    Returns
+    -------
+
+    """
     from nomad_camels.frontpanels import manage_instruments
     manager = manage_instruments.ManageInstruments()
     qtbot.addWidget(manager)
@@ -53,6 +85,7 @@
     conf.table_click()  # select
 
     def check_instr_in():
+        """ """
         # clicking on an added device, check whether it is actually added
         qtbot.mouseClick(conf.pushButton_add, Qt.MouseButton.LeftButton)
         instr = conf.get_config()
