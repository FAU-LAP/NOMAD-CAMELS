# Patch generated by Pyment v0.3.3

--- a/.\nomad_camels\\loop_steps\set_variables.py
+++ b/.\nomad_camels\\loop_steps\set_variables.py
@@ -4,6 +4,7 @@
 from nomad_camels.utility import variables_handling
 
 class Set_Variables(Loop_Step):
+    """ """
     def __init__(self, name='', parent_step=None, step_info=None, **kwargs):
         super().__init__(name, parent_step, step_info, **kwargs)
         self.step_type = 'Set Variables'
@@ -13,7 +14,17 @@
 
     def get_protocol_string(self, n_tabs=1):
         """If `wait_for_set` is True, then after setting, bps.wait for
-        the set group is called."""
+        the set group is called.
+
+        Parameters
+        ----------
+        n_tabs :
+             (Default value = 1)
+
+        Returns
+        -------
+
+        """
         tabs = '\t' * n_tabs
         protocol_string = super().get_protocol_string(n_tabs)
         for i, variable in enumerate(self.variables_values['Variable']):
@@ -26,12 +37,24 @@
         return protocol_string
 
     def get_protocol_short_string(self, n_tabs=0):
+        """
+
+        Parameters
+        ----------
+        n_tabs :
+             (Default value = 0)
+
+        Returns
+        -------
+
+        """
         short_string = super().get_protocol_short_string(n_tabs)
         short_string = f'{short_string[:-1]} - {self.variables_values}\n'
         return short_string
 
 
 class Set_Variables_Config(Loop_Step_Config):
+    """ """
     def __init__(self, loop_step:Set_Variables, parent=None):
         super().__init__(parent, loop_step)
         self.variables_table = AddRemoveTable(tableData=loop_step.variables_values,
@@ -39,6 +62,7 @@
         self.layout().addWidget(self.variables_table, 1, 0, 1, 5)
 
     def update_step_config(self):
+        """ """
         super().update_step_config()
         self.loop_step.variables_values = self.variables_table.update_table_data()
 
