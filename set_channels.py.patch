# Patch generated by Pyment v0.3.3

--- a/.\nomad_camels\\loop_steps\set_channels.py
+++ b/.\nomad_camels\\loop_steps\set_channels.py
@@ -7,18 +7,7 @@
 
 
 class Set_Channels(Loop_Step):
-    """Simple loop_step to set some channels.
-
-    Attributes
-    ----------
-    wait_for_set : bool
-        whether to wait for setting to finish before going over to the
-        next step
-    channels_values : dict
-        the dictionary should have the format
-        {'Channels': [...], 'Values': [...]} with the corresponding
-        channels and values at the same position in their lists
-    """
+    """Simple loop_step to set some channels."""
     def __init__(self, name='', parent_step=None, step_info=None, **kwargs):
         super().__init__(name, parent_step, step_info, **kwargs)
         self.step_type = 'Set Channels'
@@ -39,7 +28,17 @@
 
     def get_protocol_string(self, n_tabs=1):
         """If `wait_for_set` is True, then after setting, bps.wait for
-        the set group is called."""
+        the set group is called.
+
+        Parameters
+        ----------
+        n_tabs :
+             (Default value = 1)
+
+        Returns
+        -------
+
+        """
         tabs = '\t' * n_tabs
         protocol_string = super().get_protocol_string(n_tabs)
         for i, channel in enumerate(self.channels_values['Channels']):
@@ -53,6 +52,17 @@
         return protocol_string
 
     def get_protocol_short_string(self, n_tabs=0):
+        """
+
+        Parameters
+        ----------
+        n_tabs :
+             (Default value = 0)
+
+        Returns
+        -------
+
+        """
         short_string = super().get_protocol_short_string(n_tabs)
         short_string = f'{short_string[:-1]} - {self.channels_values}\n'
         return short_string
@@ -60,7 +70,15 @@
 
 class Set_Channels_Config(Loop_Step_Config):
     """The configuration consists of the checkbox for waiting and a
-    simple AddRemoveTable that works with the channels."""
+    simple AddRemoveTable that works with the channels.
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
+    """
     def __init__(self, loop_step:Set_Channels, parent=None):
         super().__init__(parent, loop_step)
         box = []
@@ -81,9 +99,11 @@
         self.layout().addWidget(self.sub_widget, 2, 0, 1, 5)
 
     def check_change(self):
+        """ """
         self.loop_step.wait_for_set = self.checkBox_wait_for_set.isChecked()
 
     def update_step_config(self):
+        """ """
         super().update_step_config()
         info = self.sub_widget.get_info()
         self.loop_step.channels_values = {'Channels': info['channel'],
