# Patch generated by Pyment v0.3.3

--- a/.\nomad_camels\\frontpanels\instrument_installer.py
+++ b/.\nomad_camels\\frontpanels\instrument_installer.py
@@ -26,7 +26,19 @@
 
 def getInstalledDevices(force=False, return_packages=False):
     """Goes through the given device_driver_path and returns a list of
-    the available devices."""
+    the available devices.
+
+    Parameters
+    ----------
+    force :
+         (Default value = False)
+    return_packages :
+         (Default value = False)
+
+    Returns
+    -------
+
+    """
     global installed_instr
     if installed_instr and not force and not return_packages:
         return installed_instr
@@ -50,7 +62,15 @@
 
 def getAllDevices():
     """So far only returns the installed devices, should in future work
-    with the online repository of drivers."""
+    with the online repository of drivers.
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
+    """
     global all_instr
     if all_instr:
         return all_instr
@@ -85,6 +105,7 @@
 
 
 class Instrument_Installer(Ui_Form, QWidget):
+    """ """
     instruments_updated = Signal()
 
     """
@@ -125,6 +146,17 @@
         self.pushButton_update_drivers.clicked.connect(self.update_installed)
 
     def checkBox_change(self, row):
+        """
+
+        Parameters
+        ----------
+        row :
+            
+
+        Returns
+        -------
+
+        """
         for i in range(3):
             checked = self.device_table.cellWidget(row, 0).isChecked()
             item = self.device_table.item(row, i)
@@ -132,6 +164,17 @@
             item.setBackground(brush)
 
     def get_checked_devs(self, ignore_version=False):
+        """
+
+        Parameters
+        ----------
+        ignore_version :
+             (Default value = False)
+
+        Returns
+        -------
+
+        """
         devs = []
         for box in self.checkboxes:
             if not box.isChecked():
@@ -151,6 +194,7 @@
         return devs
 
     def update_installed(self):
+        """ """
         devs = []
         for dev, version in self.installed_devs.items():
             if version != self.all_devs[dev]:
@@ -164,9 +208,21 @@
         self.install_thread.start()
 
     def uninstall_selected(self):
+        """ """
         self.install_selected(True)
 
     def install_selected(self, uninstall=False):
+        """
+
+        Parameters
+        ----------
+        uninstall :
+             (Default value = False)
+
+        Returns
+        -------
+
+        """
         self.textEdit_device_info.clear()
         devs = self.get_checked_devs(uninstall)
         self.install_thread = Install_Thread(devs, uninstall, self)
@@ -179,6 +235,7 @@
         self.install_thread.start()
 
     def thread_done(self):
+        """ """
         for c in self.disables:
             c.setEnabled(True)
         self.setCursor(Qt.ArrowCursor)
@@ -188,14 +245,17 @@
         self.instruments_updated.emit()
 
     def select_all(self):
+        """ """
         for box in self.checkboxes:
             box.setChecked(True)
 
     def select_none(self):
+        """ """
         for box in self.checkboxes:
             box.setChecked(False)
 
     def build_table(self):
+        """ """
         search_text = self.lineEdit_search_name.text()
         self.checkboxes.clear()
         self.device_table.clear()
@@ -230,6 +290,7 @@
 
 
 class Install_Thread(QThread):
+    """ """
     info_step = Signal(str)
     val_step = Signal(int)
 
@@ -239,6 +300,7 @@
         self.uninstall = uninstall
 
     def run(self):
+        """ """
         n = len(self.devs)
         path = os.path.dirname(sys.executable)
         for i, dev in enumerate(self.devs):
@@ -277,6 +339,17 @@
 
 
 def install_instrument(device_name):
+    """
+
+    Parameters
+    ----------
+    device_name :
+        
+
+    Returns
+    -------
+
+    """
     pypi_url = r'https://test.pypi.org/simple/'  # TODO Change to regular PyPi
     flags = 0
     if os.name == 'nt':
