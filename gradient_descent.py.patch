# Patch generated by Pyment v0.3.3

--- a/.\nomad_camels\\loop_steps\gradient_descent.py
+++ b/.\nomad_camels\\loop_steps\gradient_descent.py
@@ -9,6 +9,7 @@
 from nomad_camels.frontpanels.plot_definer import Plot_Info
 
 class Gradient_Descent_Step(Loop_Step):
+    """ """
     def __init__(self, name='', parent_step=None, step_info=None, **kwargs):
         super().__init__(name, parent_step, step_info, **kwargs)
         self.step_type = 'Gradient Descent'
@@ -29,6 +30,7 @@
         self.plot_steps = step_info['plot_steps'] if 'plot_steps' in step_info else True
 
     def update_used_devices(self):
+        """ """
         self.used_devices = []
         set_device = variables_handling.channels[self.out_channel].device
         self.used_devices.append(set_device)
@@ -39,6 +41,7 @@
                     self.used_devices.append(device)
 
     def get_outer_string(self):
+        """ """
         if self.plot_steps:
             plot = Plot_Info(x_axis=self.out_channel,
                               y_axes={'formula': [self.opt_func],
@@ -48,6 +51,7 @@
         return ''
 
     def get_add_main_string(self):
+        """ """
         add_main_string = ''
         if self.plot_steps:
             stream = f'"{self.name}"'
@@ -55,6 +59,17 @@
         return add_main_string
 
     def get_protocol_string(self, n_tabs=1):
+        """
+
+        Parameters
+        ----------
+        n_tabs :
+             (Default value = 1)
+
+        Returns
+        -------
+
+        """
         tabs = '\t'*n_tabs
         func_text = f'"{self.opt_func}"'
         if self.extremum == 'Maximum':
@@ -89,17 +104,20 @@
 
 
 class Gradient_Descent_Config(Loop_Step_Config):
+    """ """
     def __init__(self, loop_step:Gradient_Descent_Step, parent=None):
         super().__init__(parent, loop_step)
         self.sub_widget = Gradient_Descent_Config_Sub(loop_step, self)
         self.layout().addWidget(self.sub_widget, 1, 0, 1, 5)
 
     def update_step_config(self):
+        """ """
         super().update_step_config()
         self.sub_widget.update_step_config()
 
 
 class Gradient_Descent_Config_Sub(Ui_Grad_Desc, QWidget):
+    """ """
     def __init__(self, loop_step:Gradient_Descent_Step, parent=None):
         super().__init__(parent)
         self.setupUi(self)
@@ -131,6 +149,7 @@
         self.checkBox_plot_steps.setChecked(loop_step.plot_steps)
 
     def update_step_config(self):
+        """ """
         self.loop_step.extremum = self.comboBox_extremum_type.currentText()
         self.loop_step.out_channel = self.comboBox_output_channel.currentText()
         self.loop_step.opt_func = self.lineEdit_opt_func.text()
