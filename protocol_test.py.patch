# Patch generated by Pyment v0.3.3

--- a/.\nomad_camels\\tests\protocol_test.py
+++ b/.\nomad_camels\\tests\protocol_test.py
@@ -11,6 +11,19 @@
 
 
 def test_change_dev_config(qtbot, tmp_path):
+    """
+
+    Parameters
+    ----------
+    qtbot :
+        
+    tmp_path :
+        
+
+    Returns
+    -------
+
+    """
     ensure_demo_in_devices()
     from nomad_camels.loop_steps import change_device_config
     conf = protocol_config.Protocol_Config()
@@ -31,6 +44,19 @@
     run_test_protocol(tmp_path, prot)
 
 def test_for_loop(qtbot, tmp_path):
+    """
+
+    Parameters
+    ----------
+    qtbot :
+        
+    tmp_path :
+        
+
+    Returns
+    -------
+
+    """
     ensure_demo_in_devices()
     from nomad_camels.loop_steps import for_while_loops
     conf = protocol_config.Protocol_Config()
@@ -51,6 +77,7 @@
     select_step_by_name(conf, 'Wait (Wait)')
 
     def wait_for_move_in():
+        """ """
         qtbot.mouseClick(conf.pushButton_move_step_in, Qt.MouseButton.LeftButton)
         assert len(prot.loop_steps) == 1
     qtbot.waitUntil(wait_for_move_in)
@@ -64,6 +91,19 @@
     run_test_protocol(tmp_path, prot)
 
 def test_gradient_descent(qtbot, tmp_path):
+    """
+
+    Parameters
+    ----------
+    qtbot :
+        
+    tmp_path :
+        
+
+    Returns
+    -------
+
+    """
     ensure_demo_in_devices()
     from nomad_camels.loop_steps import gradient_descent
     conf = protocol_config.Protocol_Config()
@@ -95,6 +135,19 @@
     run_test_protocol(tmp_path, prot)
 
 def test_if_and_set_variables(qtbot, tmp_path):
+    """
+
+    Parameters
+    ----------
+    qtbot :
+        
+    tmp_path :
+        
+
+    Returns
+    -------
+
+    """
     from nomad_camels.loop_steps import set_variables
     conf = protocol_config.Protocol_Config()
     prot = conf.protocol
@@ -113,6 +166,7 @@
     action.trigger()
 
     def wait_selection():
+        """ """
         select_step_by_name(conf, f'Set Variables (Set_Variables)')
         conf.tree_click_sequence()
         assert isinstance(conf.loop_step_configuration_widget,
@@ -130,9 +184,23 @@
     run_test_protocol(tmp_path, prot)
 
 def test_nd_sweep():
+    """ """
     pass
 
 def test_read_channels(qtbot, tmp_path):
+    """
+
+    Parameters
+    ----------
+    qtbot :
+        
+    tmp_path :
+        
+
+    Returns
+    -------
+
+    """
     ensure_demo_in_devices()
     from nomad_camels.loop_steps import read_channels
     conf = protocol_config.Protocol_Config()
@@ -155,9 +223,23 @@
     run_test_protocol(tmp_path, prot)
 
 def test_run_subprotocol():
+    """ """
     pass
 
 def test_set_channels(qtbot, tmp_path):
+    """
+
+    Parameters
+    ----------
+    qtbot :
+        
+    tmp_path :
+        
+
+    Returns
+    -------
+
+    """
     ensure_demo_in_devices()
     from nomad_camels.loop_steps import set_channels
     conf = protocol_config.Protocol_Config()
@@ -181,6 +263,19 @@
     run_test_protocol(tmp_path, prot)
 
 def test_simple_sweep_with_plot_and_fit(qtbot, tmp_path):
+    """
+
+    Parameters
+    ----------
+    qtbot :
+        
+    tmp_path :
+        
+
+    Returns
+    -------
+
+    """
     ensure_demo_in_devices()
     from nomad_camels.loop_steps import simple_sweep
     from nomad_camels.frontpanels import plot_definer
@@ -220,6 +315,19 @@
     run_test_protocol(tmp_path, prot)
 
 def test_trigger_and_read_channels(qtbot, tmp_path):
+    """
+
+    Parameters
+    ----------
+    qtbot :
+        
+    tmp_path :
+        
+
+    Returns
+    -------
+
+    """
     ensure_demo_in_devices()
     from nomad_camels.loop_steps import read_channels
     conf = protocol_config.Protocol_Config()
@@ -243,6 +351,7 @@
                       read_channels.Trigger_Channels_Config)
 
     def wait_for_move():
+        """ """
         qtbot.mouseClick(conf.pushButton_move_step_up, Qt.MouseButton.LeftButton)
         assert isinstance(prot.loop_steps[0], read_channels.Trigger_Channels_Step)
     qtbot.waitUntil(wait_for_move)
@@ -259,6 +368,19 @@
     run_test_protocol(tmp_path, prot)
 
 def test_while_loop(qtbot, tmp_path):
+    """
+
+    Parameters
+    ----------
+    qtbot :
+        
+    tmp_path :
+        
+
+    Returns
+    -------
+
+    """
     from nomad_camels.loop_steps import for_while_loops
     conf = protocol_config.Protocol_Config()
     qtbot.addWidget(conf)
@@ -276,6 +398,7 @@
     select_step_by_name(conf, 'Wait (Wait)')
 
     def wait_for_move_in():
+        """ """
         qtbot.mouseClick(conf.pushButton_move_step_in, Qt.MouseButton.LeftButton)
         assert len(prot.loop_steps) == 1
     qtbot.waitUntil(wait_for_move_in)
@@ -289,6 +412,19 @@
     run_test_protocol(tmp_path, prot)
 
 def test_wait(qtbot, tmp_path):
+    """
+
+    Parameters
+    ----------
+    qtbot :
+        
+    tmp_path :
+        
+
+    Returns
+    -------
+
+    """
     from nomad_camels.loop_steps import wait_loop_step
     conf = protocol_config.Protocol_Config()
     qtbot.addWidget(conf)
@@ -313,11 +449,33 @@
 
 
 def single_variable_if(qtbot, conf, wait_in=1, n_prompt=0, n_if=0, len_prot=0):
+    """
+
+    Parameters
+    ----------
+    qtbot :
+        
+    conf :
+        
+    wait_in :
+         (Default value = 1)
+    n_prompt :
+         (Default value = 0)
+    n_if :
+         (Default value = 0)
+    len_prot :
+         (Default value = 0)
+
+    Returns
+    -------
+
+    """
     from nomad_camels.loop_steps import if_step
     action = get_action_from_name(conf.add_actions, 'If')
     action.trigger()
 
     def wait_selection():
+        """ """
         if n_if:
             select_step_by_name(conf, f'If (If_{n_if})')
         else:
@@ -344,6 +502,7 @@
         select_step_by_name(conf, f'{nam} ({nam})')
 
     def wait_for_move():
+        """ """
         qtbot.mouseClick(conf.pushButton_move_step_in, Qt.MouseButton.LeftButton)
         qtbot.mouseClick(conf.pushButton_move_step_out, Qt.MouseButton.LeftButton)
         qtbot.mouseClick(conf.pushButton_move_step_up, Qt.MouseButton.LeftButton)
@@ -365,6 +524,7 @@
         select_step_by_name(conf, f'{nam} ({nam})')
 
     def wait_for_move():
+        """ """
         qtbot.mouseClick(conf.pushButton_move_step_in, Qt.MouseButton.LeftButton)
         qtbot.mouseClick(conf.pushButton_move_step_out, Qt.MouseButton.LeftButton)
         qtbot.mouseClick(conf.pushButton_move_step_up, Qt.MouseButton.LeftButton)
@@ -379,12 +539,26 @@
     select_step_by_name(conf, f'Prompt (Prompt_{n_prompt})')
 
     def wait_for_move():
+        """ """
         qtbot.mouseClick(conf.pushButton_move_step_in, Qt.MouseButton.LeftButton)
         assert len(prot.loop_steps) == 1 + len_prot
     qtbot.waitUntil(wait_for_move)
 
 
 def select_step_by_name(conf, name):
+    """
+
+    Parameters
+    ----------
+    conf :
+        
+    name :
+        
+
+    Returns
+    -------
+
+    """
     model = conf.treeView_protocol_sequence.model()
     conf.treeView_protocol_sequence.selectionModel().clearSelection()
     index = getItemIndex(model, name)
@@ -392,6 +566,19 @@
 
 
 def get_row_from_channel_table(name, table):
+    """
+
+    Parameters
+    ----------
+    name :
+        
+    table :
+        
+
+    Returns
+    -------
+
+    """
     for i in range(table.rowCount()):
         row_name = table.item(i, 1).text()
         if name == row_name:
@@ -399,6 +586,7 @@
 
 
 def ensure_demo_in_devices():
+    """ """
     instr, packs = instrument_installer.getInstalledDevices(True, True)
     if 'demo_device' not in instr:
         instrument_installer.install_instrument('demo_device')
@@ -415,10 +603,34 @@
 
 
 def catalog_maker(tmp_path):
+    """
+
+    Parameters
+    ----------
+    tmp_path :
+        
+
+    Returns
+    -------
+
+    """
     if 'test_catalog' not in list(databroker.catalog):
         make_catalog.make_yml(tmp_path, 'test_catalog')
 
 def run_test_protocol(tmp_path, protocol):
+    """
+
+    Parameters
+    ----------
+    tmp_path :
+        
+    protocol :
+        
+
+    Returns
+    -------
+
+    """
     from nomad_camels.bluesky_handling import protocol_builder
     file = tmp_path / (protocol.name + '.py')
     savepath = tmp_path / (protocol.name + '.h5')
@@ -429,6 +641,19 @@
     assert os.path.isfile(savepath)
 
 def get_action_from_name(actions, name):
+    """
+
+    Parameters
+    ----------
+    actions :
+        
+    name :
+        
+
+    Returns
+    -------
+
+    """
     for act in actions:
         if act.text() == name:
             return act
