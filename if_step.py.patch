# Patch generated by Pyment v0.3.3

--- a/.\nomad_camels\\loop_steps\if_step.py
+++ b/.\nomad_camels\\loop_steps\if_step.py
@@ -11,6 +11,12 @@
 class If_Loop_Step(Loop_Step_Container):
     """A loopstep providing an if-case selection with a variable number
     of `elif`.
+
+    Parameters
+    ----------
+
+    Returns
+    -------
 
     Attributes
     ----------
@@ -34,14 +40,34 @@
         self.update_children()
 
     def append_to_model(self, item_model:QStandardItemModel, parent=None):
-        """Overwritten, so that nothing can be dropped into the main step."""
+        """Overwritten, so that nothing can be dropped into the main step.
+
+        Parameters
+        ----------
+        item_model:QStandardItemModel :
+            
+        parent :
+             (Default value = None)
+
+        Returns
+        -------
+
+        """
         item = super(If_Loop_Step, self).append_to_model(item_model, parent)
         item.setDropEnabled(False)
         return item
 
     def update_children(self):
         """Updates the if-substeps provided by this step, giving them
-        the names corresponding to the conditions."""
+        the names corresponding to the conditions.
+
+        Parameters
+        ----------
+
+        Returns
+        -------
+
+        """
         if not self.children:
             self.children.append(If_Sub_Step(f'{self.name}_{self.condition}'))
         n_children = 1 + len(self.elifs) + (1 if self.use_else else 0)
@@ -74,7 +100,17 @@
             raise Exception('something went wrong with if-children!')
 
     def get_protocol_string(self, n_tabs=1):
-        """Putting together the children of all if-substeps."""
+        """Putting together the children of all if-substeps.
+
+        Parameters
+        ----------
+        n_tabs :
+             (Default value = 1)
+
+        Returns
+        -------
+
+        """
         tabs = '\t' * n_tabs
         protocol_string = super().get_protocol_string(n_tabs)
         protocol_string += f'{tabs}if eva.eval("{self.condition}"):\n'
@@ -89,6 +125,17 @@
         return protocol_string
 
     def get_protocol_short_string(self, n_tabs=0):
+        """
+
+        Parameters
+        ----------
+        n_tabs :
+             (Default value = 0)
+
+        Returns
+        -------
+
+        """
         tabs = '\t' * n_tabs
         short_string = f'{tabs}if {self.condition}:\n'
         for child in self.children[0].children:
@@ -115,7 +162,19 @@
         self.step_type = 'If_Sub'
 
     def append_to_model(self, item_model:QStandardItemModel, parent=None):
-        """Overwritten, so that nothing can be dropped into the main step."""
+        """Overwritten, so that nothing can be dropped into the main step.
+
+        Parameters
+        ----------
+        item_model:QStandardItemModel :
+            
+        parent :
+             (Default value = None)
+
+        Returns
+        -------
+
+        """
         item = super().append_to_model(item_model, parent)
         item.setDragEnabled(False)
         item.setEnabled(False)
@@ -154,7 +213,15 @@
 
     def update_step_config(self):
         """Overwritten, so that the loopstep updates its substeps for
-        correctly building the protocol sequence."""
+        correctly building the protocol sequence.
+
+        Parameters
+        ----------
+
+        Returns
+        -------
+
+        """
         self.sub_widget.update_condition(True)
         self.loop_step.update_children()
         super().update_step_config()
@@ -165,7 +232,15 @@
 class If_Step_Config_Sub(QWidget):
     """This widget consists of a line for the if-condition an
     AddRemoveTable for the elif-conditions and a checkbox for whether to
-    use an else-case."""
+    use an else-case.
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
+    """
     update_config = Signal()
 
     def __init__(self, loop_step:If_Loop_Step, parent=None):
@@ -198,7 +273,15 @@
 
     def else_change(self):
         """When removing the else-case, first ask the user if they are
-        sure, since substeps will be deleted as well."""
+        sure, since substeps will be deleted as well.
+
+        Parameters
+        ----------
+
+        Returns
+        -------
+
+        """
         if self.loop_step.use_else:
             dialog = QMessageBox.question(self,
                                           'Remove Else case?',
@@ -211,7 +294,17 @@
 
     def update_condition(self, called=False):
         """Updating the loopstep. The signal is not emitted if the
-        function is called from outside, so there is no infinite loop."""
+        function is called from outside, so there is no infinite loop.
+
+        Parameters
+        ----------
+        called :
+             (Default value = False)
+
+        Returns
+        -------
+
+        """
         self.loop_step.use_else = self.checkBox_use_else.isChecked()
         self.loop_step.elifs = self.elif_table.update_table_data()
         self.loop_step.condition = self.lineEdit_condition.text()
