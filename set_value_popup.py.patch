# Patch generated by Pyment v0.3.3

--- a/.\nomad_camels\\loop_steps\set_value_popup.py
+++ b/.\nomad_camels\\loop_steps\set_value_popup.py
@@ -7,6 +7,7 @@
 
 
 class Set_Value_Popup(Loop_Step):
+    """ """
     def __init__(self, name='', parent_step=None, step_info=None, **kwargs):
         super().__init__(name, parent_step, step_info, **kwargs)
         self.step_type = 'Set Value Popup'
@@ -18,6 +19,17 @@
         self.free_channels = step_info['free_channels'] if 'free_channels' in step_info else False
 
     def get_protocol_string(self, n_tabs=1):
+        """
+
+        Parameters
+        ----------
+        n_tabs :
+             (Default value = 1)
+
+        Returns
+        -------
+
+        """
         tabs = '\t' * n_tabs
         protocol_string = super().get_protocol_string(n_tabs)
         protocol_string += f'{tabs}boxes["values_{self.name}"].done = False\n'
@@ -34,12 +46,14 @@
         return protocol_string
 
     def get_add_main_string(self):
+        """ """
         add_main_string = super().get_add_main_string()
         add_main_string += f'\tboxes["values_{self.name}"] = helper_functions.Value_Box("", "Set Values!", {self.variables}, {self.channels}, {self.free_variables}, {self.free_channels}, devs=devs)\n'
         return add_main_string
 
 
 class Set_Value_Popup_Config(Loop_Step_Config):
+    """ """
     def __init__(self, loop_step:Set_Value_Popup, parent=None):
         super().__init__(parent, loop_step)
         self.variables_table = AddRemoveTable(tableData=loop_step.variables,
@@ -59,6 +73,7 @@
         self.layout().addWidget(self.variables_table, 4, 0, 1, 5)
 
     def update_step_config(self):
+        """ """
         super().update_step_config()
         self.loop_step.variables = self.variables_table.update_table_data()
         self.loop_step.channels = self.channels_table.get_info()['channel']
