# Patch generated by Pyment v0.3.3

--- a/.\nomad_camels\\main_classes\manual_control.py
+++ b/.\nomad_camels\\main_classes\manual_control.py
@@ -8,6 +8,7 @@
 
 
 class Manual_Control(QWidget):
+    """ """
     closing = Signal()
 
     def __init__(self, parent=None, title='Manual Control', control_data=None):
@@ -30,11 +31,33 @@
     #     return super().close()
 
     def closeEvent(self, a0: QCloseEvent) -> None:
+        """
+
+        Parameters
+        ----------
+        a0: QCloseEvent :
+            
+
+        Returns
+        -------
+
+        """
         device_handling.close_devices(self.device_list)
         self.closing.emit()
         return super().closeEvent(a0)
 
     def start_device(self, device_name):
+        """
+
+        Parameters
+        ----------
+        device_name :
+            
+
+        Returns
+        -------
+
+        """
         self.device = variables_handling.devices[device_name]
         if self.device:
             self.device_list = self.device.get_necessary_devices()
@@ -48,6 +71,7 @@
 
 
 class Manual_Control_Config(QDialog):
+    """ """
     def __init__(self, parent=None, control_data=None, title='Manual Control Config', control_type=''):
         super().__init__(parent=parent)
         self.setWindowFlags(self.windowFlags() | Qt.WindowMaximizeButtonHint)
@@ -77,11 +101,23 @@
         layout.addWidget(self.buttonBox, 11, 0, 1, 2)
 
     def accept(self):
+        """ """
         self.control_data['name'] = self.lineEdit_name.text()
         self.control_data['control_type'] = self.control_type
         super().accept()
 
     def closeEvent(self, a0: QCloseEvent) -> None:
+        """
+
+        Parameters
+        ----------
+        a0: QCloseEvent :
+            
+
+        Returns
+        -------
+
+        """
         discard_dialog = QMessageBox.question(self, 'Discard Changes?',
                                               f'All changes will be lost!',
                                               QMessageBox.Yes | QMessageBox.No)
